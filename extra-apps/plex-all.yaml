---
# Source: plex/charts/app-template/templates/common.yaml
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-data
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: app-template-2.6.0
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "50Gi"
---
# Source: plex/charts/app-template/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    app.kubernetes.io/service: release-name
    helm.sh/chart: app-template-2.6.0
spec:
  type: ClusterIP
  ports:
    - port: 32400
      targetPort: 32400
      protocol: TCP
      name: http
    - port: 5055
      targetPort: 5055
      protocol: TCP
      name: overseerr
    - port: 9696
      targetPort: 9696
      protocol: TCP
      name: prowlarr
    - port: 7878
      targetPort: 7878
      protocol: TCP
      name: radarr
    - port: 8989
      targetPort: 8989
      protocol: TCP
      name: sonarr
    - port: 5690
      targetPort: 5690
      protocol: TCP
      name: wizarr
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/name: release-name
---
# Source: plex/charts/app-template/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: app-template-2.6.0
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/name: release-name
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: release-name
    spec:
      enableServiceLinks: true
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1000
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      containers:
        - image: ghcr.io/linuxserver/plex:latest
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 32400
            timeoutSeconds: 1
          name: main
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 32400
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 32400
            timeoutSeconds: 1
        - image: sctx/overseerr:latest
          name: overseerr
          volumeMounts:
          - mountPath: /app/config
            name: data
            subPath: overseerr/config
        - image: lscr.io/linuxserver/prowlarr:latest
          name: prowlarr
          volumeMounts:
          - mountPath: /config
            name: data
            subPath: prowlarr/config
        - image: lscr.io/linuxserver/radarr:latest
          name: radarr
          volumeMounts:
          - mountPath: /config
            name: data
            subPath: radarr/config
        - image: lscr.io/linuxserver/sonarr:latest
          name: sonarr
          volumeMounts:
          - mountPath: /config
            name: data
            subPath: sonarr/config
        - image: ghcr.io/wizarrrr/wizarr:latest
          name: wizarr
          volumeMounts:
          - mountPath: /data/database
            name: data
            subPath: wizarr/config
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: release-name-data
---
# Source: plex/charts/app-template/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-name
    helm.sh/chart: app-template-2.6.0
  annotations:
    cert-manager.io/cluster-issuer: ssl-prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "plex-test.galactica.host"
        - "prowlarr.galactica.host"
        - "radarr.galactica.host"
        - "sonarr.galactica.host"
        - "requests-test.galactica.host"
        - "wizarr-test.galactica.host"
      secretName: "plex-tls-certificate"
  rules:
    - host: "plex-test.galactica.host"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name
                port:
                  number: 32400
    - host: "prowlarr.galactica.host"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name
                port:
                  number: 9696
    - host: "radarr.galactica.host"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name
                port:
                  number: 7878
    - host: "sonarr.galactica.host"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name
                port:
                  number: 8989
    - host: "requests-test.galactica.host"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name
                port:
                  number: 5055
    - host: "wizarr-test.galactica.host"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: release-name
                port:
                  number: 5690
