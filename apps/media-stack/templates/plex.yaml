---
apiVersion: v1
kind: Service
metadata:
  name: plex
spec:
  type: ClusterIP
  ports:
    - port: 32400
      targetPort: 32400
      protocol: TCP
      name: plex
  selector:
    app.kubernetes.io/component: plex
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  labels:
    app.kubernetes.io/component: plex
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: plex
      app.kubernetes.io/name: plex
      app.kubernetes.io/instance: plex
  template:
    metadata:
      labels:
        app.kubernetes.io/component: plex
        app.kubernetes.io/instance: plex
        app.kubernetes.io/name: plex
    spec:
      runtimeClassName: nvidia
      enableServiceLinks: true
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1000
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      containers:
        - image: ghcr.io/linuxserver/plex:latest
          name: plex
          securityContext:
            privileged: true
          resources:
            requests:
              nvidia.com/gpu: "1"
              # TODO: Sort out request amounts
              # cpu: 1000m
              # memory: 7.5Gi
            limits:
              nvidia.com/gpu: "1"
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "100"
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: compute,video,utility
            - name: CUDA_DRIVER_CAPABILITIES
              value: compute,video,utility
          volumeMounts:
            - mountPath: /config
              name: data
              subPath: plex/config
            - mountPath: /data/media
              name: media
            - mountPath: /transcode
              name: transcode
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: pvc-media-stack-data-local
        - name: media
          persistentVolumeClaim:
            claimName: pvc-media
        - name: transcode
          emptyDir:
            medium: Memory
            sizeLimit: 10Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: plex
  labels:
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
  annotations:
    cert-manager.io/cluster-issuer: ssl-prod
    external-dns.alpha.kubernetes.io/target: "homelab-tunnel.galactica.host"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "plex.galactica.host"
      secretName: "plex-tls-certificate"
  rules:
    - host: "plex.galactica.host"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: plex
                port:
                  number: 32400