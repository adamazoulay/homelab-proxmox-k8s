---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
spec:
  type: ClusterIP
  ports:
    - port: 9696
      targetPort: 9696
      protocol: TCP
      name: prowlarr
  selector:
    app.kubernetes.io/component: prowlarr
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/name: prowlarr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  labels:
    app.kubernetes.io/component: prowlarr
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/name: prowlarr
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: prowlarr
      app.kubernetes.io/name: prowlarr
      app.kubernetes.io/instance: prowlarr
  template:
    metadata:
      labels:
        app.kubernetes.io/component: prowlarr
        app.kubernetes.io/instance: prowlarr
        app.kubernetes.io/name: prowlarr
    spec:
      enableServiceLinks: true
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1000
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      containers:
        - image: linuxserver/prowlarr:latest
          volumeMounts:
            - mountPath: /config
              name: data
              subPath: prowlarr/config
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 9696
            timeoutSeconds: 1
          name: prowlarr
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 9696
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 9696
            timeoutSeconds: 1
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: media-stack-data
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prowlarr
  labels:
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/name: prowlarr
  annotations:
    cert-manager.io/cluster-issuer: ssl-prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "prowlarr-test.galactica.host"
      secretName: "prowlarr-tls-certificate"
  rules:
    - host: "prowlarr-test.galactica.host"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: prowlarr
                port:
                  number: 9696